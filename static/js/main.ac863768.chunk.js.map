{"version":3,"sources":["pages/home/types.js","pages/home/reducer.js","constans/routes.js","components/Header.js","components/Layout.js","components/SearchLine.js","pages/search/types.js","components/WeatherCard.js","services/storage.js","pages/home/index.js","components/Loader.js","pages/search/reducer.js","services/date.js","pages/search/index.js","pages/index.js","services/api.js","pages/home/saga.js","pages/search/saga.js","sagas/index.js","reducer/index.js","serviceWorker.js","index.js"],"names":["TYPES","DATA","GET_DATA","SHOW_ERROR","GET_DATA_CITY","initialState","data","loading","selector","state","home","reducer","action","type","options","CLEAR","ROUTES","useStyles","makeStyles","theme","createStyles","header","display","alignItems","height","marginBottom","backgroundColor","padding","title","color","fontSize","button","marginRight","Header","memo","classes","history","useHistory","className","location","pathname","includes","IconButton","aria-label","onClick","goBack","style","textDecoration","to","Typography","component","Layout","children","Container","root","flexWrap","margin","spacing","withoutLabel","marginTop","textField","width","iconButton","SearchLine","searchCity","inputData","useState","values","setValues","handleChange","useCallback","prop","event","target","value","useEffect","onSearch","e","push","FormControl","fullWidth","variant","InputLabel","htmlFor","OutlinedInput","labelWidth","id","onChange","endAdornment","defaultProps","position","cardContainer","btn","top","right","zIndex","topCard","flexDirection","bottomCard","justifyContent","gridList","footerBtn","borderRadius","temperature","temperatureSymbol","WeatherCard","props","isListener","name","country","windSpeed","humidity","pressure","temp","description","isVisible","visible","setVisible","isVisibleTitle","Grid","item","xs","onMouseLeave","onMouseEnter","Slide","direction","in","Card","CardContent","gutterBottom","setToLocalStorage","arr","localStorage","removeItem","setItem","JSON","stringify","Main","useSelector","dispatch","useDispatch","getDataRequest","setNewData","getDataOfCity","str","TYPESSEARCH","storage","getItem","parse","getToLocalStorage","newData","_","filter","currentData","useMemo","map","sys","wind","speed","main","Math","round","weather","container","tile","key","Loader","progress","setProgress","timer","setInterval","oldProgress","clearInterval","CircularProgress","size","currentCity","search","parseToUnixTimestap","date","parseOfUnixTimestap","Date","card","flexGrow","maxWidth","flexBasis","bottom","vertical","infoWeather","alignSelf","padding0","Search","match","homeSelector","searchSelector","includeOfData","setIncludeOfData","HOMETYPES","some","city","params","isHandler","newCityDate","list","optionsDate","weekday","hour","minute","optionsTime","tempMax","temp_max","tempMin","temp_min","timeSunset","sunset","toLocaleDateString","timeSunrise","sunrise","timeWeatherReport","dt","weatherMap","App","path","Home","exact","from","API_QUERY","instance","axios","create","baseURL","getBaseDataRequest","method","url","then","response","getDataOfCityRequest","searchRequest","getData","put","call","payload","select","newItem","takeEvery","todayMidnight","setHours","finishedToday","setDate","getDate","finishedTomorrow","finishedTodayUnixData","finishedTomorrowUnixData","timeData","length","console","log","takeLatest","sagasRoot","all","fork","sagasHome","sagasSearch","enchantedCompose","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","homeReducer","searchReducer","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","Boolean","hostname","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ac863768.chunk.js","sourcesContent":["export const TYPES = {\n    DATA: 'DATA',\n    GET_DATA: 'GET_DATA',\n    SHOW_ERROR: 'SHOW_ERROR',\n    GET_DATA_CITY: 'GET_DATA_CITY',\n};\n","// outsource dependencies\n\n// local dependencies\nimport { TYPES } from './types';\n\nconst initialState = {\n    data: null,\n    loading: false,\n};\n\nexport const selector = (state) => state.home;\n\nconst reducer = (state = initialState, action) => {\n    const { type, ...options } = action;\n    switch (type) {\n        case TYPES.DATA: return { ...state, ...options };\n\n        case TYPES.CLEAR: return { ...state, ...options };\n\n        default: return state;\n    }\n};\n\nexport default reducer;\n","export const ROUTES = {\n    HOME: '/home',\n    SEARCH: '/search',\n};\n","// outsource dependencies\nimport React, { memo } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\n\n// material ui\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\n\n// local dependencies\nimport { ROUTES } from '../constans/routes';\n\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        header: {\n            display: 'flex',\n            alignItems: 'center',\n            height: '10vh',\n            marginBottom: 30,\n            backgroundColor: 'black',\n            padding: 20,\n        },\n        title: {\n            color: '#fff',\n            fontSize: '3rem',\n        },\n        button: {\n            color: '#fff',\n            marginRight: '5%',\n        },\n    })\n);\n\nconst Header = memo(() => {\n    const classes = useStyles();\n    const history = useHistory();\n\n    return <header className={classes.header}>\n        { !history.location.pathname.includes('home') && <IconButton\n            aria-label=\"go back\"\n            className={classes.button}\n            onClick={() => history.goBack()}\n        >\n            <KeyboardBackspaceIcon fontSize=\"large\"/>\n        </IconButton>\n        }\n        <NavLink style={{ textDecoration: 'none' }} to={ROUTES.HOME}>\n            <Typography className={classes.title} component=\"h1\"> Weather</Typography>\n        </NavLink>\n    </header>;\n});\n\nexport default Header;\n","// outsource dependencies\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// material ui\nimport Container from '@material-ui/core/Container';\n\n// local dependencies\nimport Header from '../components/Header';\n\n\nconst Layout = ({ children }) => {\n\n    return <>\n        <Header />\n        <Container>\n            {children}\n        </Container>\n    </>;\n};\n\nLayout.propTypes = {\n    children: PropTypes.object.isRequired,\n};\n\nexport default Layout;\n","// outsource dependencies\nimport PropTypes from 'prop-types';\nimport React, { memo, useCallback, useEffect, useState } from 'react';\n\n// material ui\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControl from '@material-ui/core/FormControl';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\n\n\n// local dependencies\nimport { ROUTES } from '../constans/routes';\n\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        root: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            marginBottom: 30,\n        },\n        margin: {\n            margin: theme.spacing(1),\n        },\n        withoutLabel: {\n            marginTop: theme.spacing(3),\n        },\n        textField: {\n            width: '25ch',\n        },\n        iconButton: {\n            padding: 10,\n        },\n    })\n);\n\nconst SearchLine = memo(({ location, history, searchCity, inputData }) => {\n    const classes = useStyles();\n    const [values, setValues] = useState('');\n\n    const handleChange = useCallback((prop) => (event) => {\n        setValues(event.target.value);\n    }, []);\n\n    useEffect(() => {\n        !values && setValues(inputData);\n    }, [inputData, values]);\n\n    const onSearch = useCallback(() => (e) => {\n        if (values) {\n            searchCity(values);\n\n            if (location.pathname !== ROUTES.SEARCH) {\n                history.push(ROUTES.SEARCH);\n            }\n        }\n    }, [values, searchCity, location.pathname, history]);\n\n    return <div className={classes.root}>\n        <FormControl fullWidth className={classes.margin} variant=\"outlined\">\n            <InputLabel htmlFor=\"search-city\">Search </InputLabel>\n            <OutlinedInput\n                labelWidth={60}\n                id=\"search-city\"\n                onChange={handleChange('search')}\n                endAdornment={\n                    <IconButton\n                        type=\"button\"\n                        aria-label=\"search\"\n                        onClick={onSearch()}\n                        className={classes.iconButton}\n                    >\n                        <SearchIcon />\n                    </IconButton>\n                }\n            />\n        </FormControl>\n    </div>;\n});\n\nSearchLine.propTypes = {\n    inputData: PropTypes.string,\n    history: PropTypes.object.isRequired,\n    location: PropTypes.object.isRequired,\n    searchCity: PropTypes.func.isRequired,\n};\n\nSearchLine.defaultProps = {\n    inputData: '',\n};\n\nexport default SearchLine;\n","export const TYPES = {\n    DATA: 'DATA',\n    GET_DATA: 'GET_DATA',\n    SHOW_ERROR: 'SHOW_ERROR',\n    SEARCH_CITY: 'SEARCH_CITY',\n};\n","// outsource dependencies\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport React, { memo, useCallback, useState } from 'react';\n\n// material ui\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport Slide from '@material-ui/core/Slide';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CardContent from '@material-ui/core/CardContent';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\n\n// local dependencies\nimport { ROUTES } from '../constans/routes';\n\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        root: {\n            position: 'relative',\n        },\n        cardContainer: {\n            position: 'relative',\n        },\n        btn: {\n            position: 'absolute',\n            top: 15,\n            right: 12,\n            display: 'block',\n            zIndex: 2,\n        },\n        topCard: {\n            display: 'flex',\n            flexDirection: 'column',\n        },\n        title: {\n            padding: 0,\n            display: 'flex',\n            fontSize: '1.8rem',\n            flexDirection: 'row',\n        },\n        bottomCard: {\n            display: 'flex',\n            justifyContent: 'space-between',\n        },\n        gridList: {\n            width: '100%',\n            height: '100%',\n            justifyContent: 'center',\n        },\n        footerBtn: {\n            marginTop: 20,\n            borderRadius: 0,\n            padding: '20px 0',\n        },\n        temperature: {\n            fontSize: '4rem',\n        },\n        temperatureSymbol: {\n            fontSize: '1.7rem',\n        }\n    })\n);\n\nconst WeatherCard = memo(props => {\n    const classes = useStyles();\n    const { isListener, id, name, country, windSpeed, humidity, pressure, temp, description, searchCity } = props;\n\n    const [visible, setVisible] = useState({ isVisible: false, id: null });\n\n    const isVisibleTitle = useCallback(\n        (id = null) => {\n            if (id || !visible.isVisible) {\n                setVisible({ isVisible: true, id });\n            } else if (visible.isVisible) {\n                setVisible({ isVisible: false, id: null });\n            }\n        },\n        [visible]\n    );\n\n    return <Grid\n        item xs={6}\n        className={classes.root}\n        onMouseLeave={() => isVisibleTitle()}\n        onMouseEnter={() => isVisibleTitle(id)}\n    >\n        <Slide direction=\"down\" in={visible.id === id}>\n            <div className={classes.btn}>\n                <IconButton\n                    color=\"inherit\"\n                    aria-label=\"refresh {name} card\"\n                    onClick={() => isListener('refresh', id)}\n                >\n                    <RefreshIcon fontSize=\"large\"/>\n                </IconButton>\n                <IconButton\n                    color=\"inherit\"\n                    aria-label=\"delete {name} card\"\n                    onClick={() => isListener('delete', id)}\n                >\n                    <HighlightOffIcon fontSize=\"large\"/>\n                </IconButton>\n            </div>\n        </Slide>\n\n        <NavLink style={{ textDecoration: 'none' }} onClick={() => searchCity(name)} to={`${ROUTES.SEARCH}/${name}`} >\n            <Card className={classes.cardContainer} variant=\"outlined\">\n                <CardContent className={classes.topCard}>\n                    <CardContent className={classes.title}>\n                        <Typography className={classes.title} component=\"h2\" color=\"textSecondary\">\n                            {name}\n                        </Typography><Typography className={classes.title} component=\"h2\" color=\"textSecondary\">\n                        , {country}\n                        </Typography>\n                    </CardContent>\n                    <Typography color=\"textSecondary\" gutterBottom>\n                        {description}\n                    </Typography>\n                </CardContent>\n                <CardContent className={classes.bottomCard}>\n                    <CardContent className={classes.title}>\n                        <Typography className={classes.temperature}>\n                            {temp}\n                        </Typography>\n                        <sup className={classes.temperatureSymbol}>°C</sup>\n                    </CardContent>\n                    <CardContent className={classes.topCard}>\n                        <Typography color=\"textSecondary\" gutterBottom>\n                            Wind: {windSpeed} m/s\n                        </Typography>\n                        <Typography color=\"textSecondary\" gutterBottom>\n                            Humidity: {humidity} %\n                        </Typography>\n                        <Typography color=\"textSecondary\" gutterBottom>\n                            Pressure: {pressure} hpa\n                        </Typography>\n                    </CardContent>\n                </CardContent>\n            </Card>\n        </NavLink>\n    </Grid>;\n});\n\nWeatherCard.propTypes = {\n    id: PropTypes.number.isRequired,\n    temp: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    country: PropTypes.string.isRequired,\n    isListener: PropTypes.func.isRequired,\n    humidity: PropTypes.number.isRequired,\n    pressure: PropTypes.number.isRequired,\n    searchCity: PropTypes.func.isRequired,\n    windSpeed: PropTypes.number.isRequired,\n    description: PropTypes.string.isRequired,\n};\n\nexport default WeatherCard;\n","export function setToLocalStorage (arr) {\n    localStorage.removeItem('dataWeather');\n    localStorage.setItem('dataWeather', JSON.stringify([arr]));\n}\n\nexport function getToLocalStorage () {\n    const storage = localStorage.getItem('dataWeather');\n\n    if (storage) {\n        return JSON.parse(storage)[0];\n    }\n}\n","// outsource dependencies\nimport _ from 'lodash';\nimport { useDispatch, useSelector } from 'react-redux';\nimport React, { memo, useCallback, useMemo, useEffect } from 'react';\n\n// material ui\nimport Grid from '@material-ui/core/Grid';\n\n// local dependencies\nimport { TYPES } from './types';\nimport { selector } from './reducer';\nimport Layout from '../../components/Layout';\nimport SearchLine from '../../components/SearchLine';\nimport { TYPES as TYPESSEARCH } from '../search/types';\nimport WeatherCard from '../../components/WeatherCard';\nimport { getToLocalStorage, setToLocalStorage } from '../../services/storage';\n\n\nconst Main = memo(props => {\n    const { data } = useSelector(selector);\n\n    const dispatch = useDispatch();\n    const getDataRequest = useCallback(() => dispatch({ type: TYPES.GET_DATA }), [dispatch]);\n    const setNewData = useCallback(data => dispatch({ type: TYPES.DATA, data }), [dispatch]);\n    const getDataOfCity = useCallback(id => dispatch({ type: TYPES.GET_DATA_CITY, id }), [dispatch]);\n    const searchCity = useCallback(str => dispatch({ type: TYPESSEARCH.SEARCH_CITY, str }), [dispatch]);\n\n    useEffect(() => {\n        const storage = getToLocalStorage();\n\n        if (!data) {\n            if (storage) {\n                setNewData(storage);\n            } else {\n                getDataRequest();\n            }\n        }\n    }, [data, getDataRequest, setNewData]);\n\n    const isListener = useCallback((event, id) => {\n        if (event === 'delete') {\n            let newData = data;\n            newData = _.filter(newData, item => id !== item.id);\n\n            setToLocalStorage(newData);\n            setNewData(newData);\n        } else if (event === 'refresh') { getDataOfCity(id); }\n    }, [data, setNewData, getDataOfCity]);\n\n    const currentData = useMemo(() =>\n        data && _.map(data, (item) => ({\n            id: item.id,\n            name: item.name,\n            country: item.sys.country,\n            windSpeed: item.wind.speed,\n            humidity: item.main.humidity,\n            pressure: item.main.pressure,\n            temp: Math.round(item.main.temp),\n            description: item.weather[0].description,\n        })), [data]);\n\n    return (\n        <Layout >\n            <SearchLine {...props} searchCity={searchCity} />\n            <Grid container spacing={3}>\n                {_.map(currentData, (tile) =>\n                    <WeatherCard searchCity={searchCity} isListener={isListener} key={tile.id} {...tile} />\n                )}\n            </Grid>\n        </Layout>\n    );\n});\n\nexport default Main;\n","// outsource dependencies\nimport React, { useState, useEffect } from 'react';\n\n// material ui\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\n\n// local dependencies\n\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        root: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            width: '100%',\n            height: '100vh',\n        },\n    })\n);\n\nexport default function Loader () {\n    const classes = useStyles();\n    const [progress, setProgress] = useState(0);\n\n    useEffect(() => {\n        function tick () {\n            // reset when reaching 100%\n            setProgress((oldProgress) => (oldProgress >= 100 ? 0 : oldProgress + 1));\n        }\n\n        const timer = setInterval(tick, 20);\n        return () => {\n            clearInterval(timer);\n        };\n    }, []);\n\n    return (\n        <div className={classes.root}>\n            <CircularProgress size=\"20vw\" variant=\"determinate\" value={progress} color=\"secondary\" />\n        </div>\n    );\n}\n","// outsource dependencies\n\n// local dependencies\nimport { TYPES } from '../home/types';\n\nconst initialState = {\n    currentCity: null,\n    inputData: '',\n    loading: false,\n};\n\nexport const selector = (state) => state.search;\n\nconst reducer = (state = initialState, action) => {\n    const { type, ...options } = action;\n    switch (type) {\n        case TYPES.DATA: return { ...state, ...options };\n\n        case TYPES.CLEAR: return { ...state, ...options };\n\n        default: return state;\n    }\n};\n\nexport default reducer;\n","export function parseToUnixTimestap (date) {\n    return ~~(+date / 1000);\n}\n\nexport function parseOfUnixTimestap (date) {\n    return new Date(date * 1000);\n}\n","// outsource dependencies\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport React, { memo, useCallback, useMemo, useEffect, useState } from 'react';\n\n// material ui\nimport Card from '@material-ui/core/Card';\nimport Slide from '@material-ui/core/Slide';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport CardContent from '@material-ui/core/CardContent';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\n\n// local dependencies\nimport { TYPES } from './types';\nimport Loader from '../../components/Loader';\nimport { TYPES as HOMETYPES } from '../home/types';\nimport SearchLine from '../../components/SearchLine';\nimport { selector as searchSelector } from './reducer';\nimport { parseOfUnixTimestap } from '../../services/date';\nimport { selector as homeSelector } from '../home/reducer';\nimport { getToLocalStorage, setToLocalStorage } from '../../services/storage';\nimport Layout from '../../components/Layout';\n\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        card: {\n            position: 'relative',\n        },\n        cardContainer: {\n            flexGrow: 0,\n            maxWidth: '100%',\n            flexBasis: '100%',\n        },\n        btn: {\n            position: 'absolute',\n            bottom: 15,\n            right: 12,\n            display: 'block',\n            zIndex: 2,\n            backgroundColor: 'rgba(0, 0, 0, 0.8)'\n        },\n        vertical: {\n            display: 'flex',\n            flexDirection: 'column',\n        },\n        infoWeather: {\n            fontSize: '1.2rem',\n            display: 'flex',\n            flexDirection: 'column',\n            alignSelf: 'flex-end',\n        },\n        padding0: {\n            padding: 0,\n        },\n        title: {\n            padding: 0,\n            display: 'flex',\n            fontSize: '1.8rem',\n            flexDirection: 'row',\n        },\n        topCard: {\n            padding: 0,\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n        },\n        bottomCard: {\n            display: 'flex',\n            justifyContent: 'space-between',\n        },\n        gridList: {\n            width: '100%',\n            height: '100%',\n            justifyContent: 'center',\n        },\n        footerBtn: {\n            marginTop: 20,\n            borderRadius: 0,\n            padding: '20px 0',\n        },\n        temperature: {\n            fontSize: '6rem',\n            padding: '0 10%',\n        },\n        temperatureSymbol: {\n            fontSize: '1.7rem',\n        }\n    })\n);\n\nconst Search = memo(props => {\n    const classes = useStyles();\n\n    const { match } = props;\n    const { data } = useSelector(homeSelector);\n    const { currentCity, inputData } = useSelector(searchSelector);\n\n    const [includeOfData, setIncludeOfData] = useState(false);\n    const [visible, setVisible] = useState({ isVisible: false, id: null });\n\n    const dispatch = useDispatch();\n    const getDataRequest = useCallback(() => dispatch({ type: HOMETYPES.GET_DATA }), [dispatch]);\n    const setNewData = useCallback(data => dispatch({ type: HOMETYPES.DATA, data }), [dispatch]);\n    const searchCity = useCallback(str => dispatch({ type: TYPES.SEARCH_CITY, str }), [dispatch]);\n\n    useEffect(() => {\n        if (currentCity) {\n            setIncludeOfData(_.some(data, item => currentCity.city.id === item.id));\n        }\n\n        if (!inputData) {\n            searchCity(match.params.city);\n        }\n    }, [currentCity, data, getDataRequest, inputData, match.params.city, searchCity, setNewData]);\n\n    const isVisibleTitle = useCallback(\n        (id = null) => {\n            if (id || !visible.isVisible) {\n                setVisible({ isVisible: true, id });\n            } else if (visible.isVisible) {\n                setVisible({ isVisible: false, id: null });\n            }\n        },\n        [visible]\n    );\n\n    const isHandler = useCallback((event, id) => {\n        let newData;\n\n        if (event === 'delete') {\n            newData = _.filter(data, item => id !== item.id);\n        }\n\n        if (event === 'add') {\n            const newCityDate = {\n                id: currentCity.city.id,\n                name: currentCity.city.name,\n                sys: { country: currentCity.city.country },\n                wind: { speed: currentCity.list[0].wind.speed },\n                weather: [{ description: currentCity.list[0].weather[0].description }],\n                main: {\n                    humidity: currentCity.list[0].main.humidity,\n                    pressure: currentCity.list[0].main.pressure,\n                    temp: currentCity.list[0].main.temp,\n                },\n            };\n\n            newData = [{ ...newCityDate }, ...data];\n        }\n\n        setNewData(newData);\n        setToLocalStorage(newData);\n    }, [data, setNewData, currentCity]);\n\n\n    const optionsDate = { weekday: 'long', hour: '2-digit', minute: '2-digit' };\n    const optionsTime = { hour: '2-digit', minute: '2-digit' };\n    const currentData = useMemo(() =>\n        currentCity && ({\n            id: currentCity.city.id,\n            name: currentCity.city.name,\n            country: currentCity.city.country,\n            // current\n            windSpeed: currentCity.list[0].wind.speed,\n            humidity: currentCity.list[0].main.humidity,\n            pressure: currentCity.list[0].main.pressure,\n            weather: currentCity.list[0].weather[0].main,\n            temp: Math.round(currentCity.list[0].main.temp),\n            tempMax: Math.round(currentCity.list[0].main.temp_max),\n            tempMin: Math.round(currentCity.list[0].main.temp_min),\n            description: currentCity.list[0].weather[0].description,\n            timeSunset: parseOfUnixTimestap(currentCity.city.sunset).toLocaleDateString('en-US', optionsTime),\n            timeSunrise: parseOfUnixTimestap(currentCity.city.sunrise).toLocaleDateString('en-US', optionsTime),\n            timeWeatherReport: parseOfUnixTimestap(currentCity.list[0].dt).toLocaleDateString('en-US', optionsDate),\n            // weather map\n            weatherMap: _.map(currentCity.list, item => ({\n                id: item.dt,\n                weather: item.weather[0].main,\n                temp: Math.round(item.main.temp),\n                timeWeatherReport: parseOfUnixTimestap(item.dt).toLocaleDateString('en-US', optionsTime),\n            })),\n        }), [currentCity, optionsDate, optionsTime]);\n\n    return !currentData\n        ? <Loader/>\n        : <Layout>\n            <div className={classes.root}>\n                <SearchLine {...props} inputData={inputData} searchCity={searchCity}/>\n                <Card\n                    variant=\"outlined\"\n                    className={classes.card}\n                    onMouseLeave={() => isVisibleTitle()}\n                    onMouseEnter={() => isVisibleTitle(currentData.id)}\n                >\n                    <Slide direction=\"up\" in={visible.id === currentData.id}>\n                        <div className={classes.btn}>\n                            {includeOfData\n                                ? <IconButton\n                                    color=\"inherit\"\n                                    aria-label=\"delete {name} card\"\n                                    onClick={() => isHandler('delete', currentData.id)}\n                                >\n                                    <HighlightOffIcon style={{ color: '#fff' }} fontSize=\"large\"/>\n                                </IconButton>\n                                : <IconButton\n                                    color=\"inherit\"\n                                    aria-label=\"add {name} card\"\n                                    onClick={() => isHandler('add', currentData.id)}\n                                >\n                                    <AddCircleOutlineIcon style={{ color: '#fff' }} fontSize=\"large\"/>\n                                </IconButton>\n                            }\n                        </div>\n                    </Slide>\n\n                    <CardContent className={classes.topCard}>\n                        <CardContent className={classes.vertical}>\n                            <CardContent className={classes.title}>\n                                <Typography className={classes.title} component=\"h2\">\n                                    {currentData.name}\n                                </Typography>\n                                <Typography className={classes.title} component=\"h2\">\n                                    , {currentData.country}\n                                </Typography>\n                            </CardContent>\n                            <Typography color=\"textSecondary\" gutterBottom>\n                                {currentData.timeWeatherReport}\n                            </Typography>\n                            <Typography color=\"textSecondary\" gutterBottom>\n                                {currentData.description}\n                            </Typography>\n                        </CardContent>\n                        <CardContent className={classes.vertical}>\n                            <Typography color=\"textSecondary\" gutterBottom>\n                                time sunrise: {currentData.timeSunrise}\n                            </Typography>\n                            <Typography color=\"textSecondary\" gutterBottom>\n                                time sunset: {currentData.timeSunset}\n                            </Typography>\n                        </CardContent>\n                    </CardContent>\n                    <CardContent className={classes.bottomCard}>\n                        <CardContent className={classes.vertical + classes.padding0}>\n                            <CardContent className={classes.title}>\n                                <Typography className={classes.temperature}>\n                                    {currentData.temp}\n                                </Typography>\n                                <sup className={classes.temperatureSymbol}>°C</sup>\n                            </CardContent>\n                            <br/>\n                            <CardContent style={{ padding: 0 }} className={classes.vertical}>\n                                <Typography color=\"textSecondary\" gutterBottom>\n                                    min. temperature: {currentData.tempMin}\n                                    <sup>°C</sup>\n                                </Typography>\n                                <Typography color=\"textSecondary\" gutterBottom>\n                                    min. temperature: {currentData.tempMax}\n                                    <sup>°C</sup>\n                                </Typography>\n                            </CardContent>\n                        </CardContent>\n                        <CardContent className={classes.infoWeather}>\n                            <Typography color=\"textSecondary\" gutterBottom>\n                                Wind: {currentData.windSpeed} m/s\n                            </Typography>\n                            <Typography color=\"textSecondary\" gutterBottom>\n                                Humidity: {currentData.humidity} %\n                            </Typography>\n                            <Typography color=\"textSecondary\" gutterBottom>\n                                Pressure: {currentData.pressure} hpa\n                            </Typography>\n                        </CardContent>\n                    </CardContent>\n                </Card>\n                {/*<Card*/}\n\n                {/*</Card>*/}\n            </div>\n        </Layout>;\n});\n\nSearch.propTypes = {\n    match: PropTypes.object.isRequired,\n    history: PropTypes.object.isRequired,\n};\n\nexport default Search;\n","// outsource dependencies\nimport React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\n// material ui\n\n// local dependencies\nimport Home from './home';\nimport Search from './search';\nimport { ROUTES } from '../constans/routes';\n\n\nexport default function App () {\n\n    return <>\n        <Switch>\n            <Route path={ROUTES.HOME} component={Home}/>\n            <Route path={`${ROUTES.SEARCH}/:city?`} component={Search}/>\n            <Redirect exact from=\"/\" to={ROUTES.HOME}/>\n        </Switch>\n    </>;\n}\n","// outsource dependencies\nimport axios from 'axios';\n\n// local dependencies\n\nconst API_QUERY = '&appid=36c1f43a7b5290d7522108114bec530d';\n\nconst instance = axios.create({\n    baseURL: 'https://api.openweathermap.org/data/2.5',\n});\n\nexport const getBaseDataRequest = () => {\n    return instance({ method: 'get', url: `/find?lat=50&lon=36&cnt=30${API_QUERY}&units=metric` })\n        .then(response => response.data.list);\n};\n\nexport const getDataOfCityRequest = id => {\n    return instance({ method: 'get', url: `/weather?id=${id}${API_QUERY}&units=metric` })\n        .then(response => response.data);\n};\n\nexport const searchRequest = city => {\n    return instance({ method: 'get', url: `forecast?q=${city}${API_QUERY}&units=metric` })\n        .then(response => response.data);\n};\n","// outsource dependencies\nimport _ from 'lodash';\nimport { call, put, select, takeEvery } from 'redux-saga/effects';\n\n// local dependencies\nimport { TYPES } from './types';\nimport { setToLocalStorage } from '../../services/storage';\nimport { getBaseDataRequest, getDataOfCityRequest } from '../../services/api';\n\n\nfunction * getData ({ type, ...payload }) {\n    yield put({ type: TYPES.DATA, loading: true });\n\n    try {\n        const data = yield call(getBaseDataRequest);\n        setToLocalStorage(data);\n\n        yield put({ type: TYPES.DATA, data });\n\n    } catch (e) {\n        yield put({ type: TYPES.SHOW_ERROR });\n    }\n\n    yield put({ type: TYPES.DATA, loading: false });\n}\n\nfunction * getDataOfCity ({ type, ...payload }) {\n    const { id } = payload;\n\n    yield put({ type: TYPES.DATA, loading: true });\n    let currentData = yield select((state) => state.home.data);\n\n    try {\n        const newItem = yield call(getDataOfCityRequest, id);\n        currentData = _.map(currentData, item => (id === item.id ? { ...newItem } : { ...item }));\n\n        setToLocalStorage(currentData);\n\n        yield put({ type: TYPES.DATA, data: currentData });\n\n    } catch (e) {\n        yield put({ type: TYPES.SHOW_ERROR });\n    }\n\n    yield put({ type: TYPES.DATA, loading: false });\n}\n\nexport default function * () {\n    yield takeEvery(TYPES.GET_DATA, getData);\n    yield takeEvery(TYPES.GET_DATA_CITY, getDataOfCity);\n}\n","// outsource dependencies\nimport _ from 'lodash';\nimport { call, put, takeLatest } from 'redux-saga/effects';\n\n// local dependencies\nimport { TYPES } from './types';\nimport { searchRequest } from '../../services/api';\nimport { parseToUnixTimestap } from '../../services/date';\n\n\nfunction * search ({ type, ...payload }) {\n    const { str } = payload;\n\n    let todayMidnight = new Date().setHours(0, 0, 0, 0);\n    todayMidnight = new Date(todayMidnight);\n    const finishedToday = todayMidnight.setDate(todayMidnight.getDate() + 1);\n    const finishedTomorrow = todayMidnight.setDate(todayMidnight.getDate() + 2);\n\n    const finishedTodayUnixData = parseToUnixTimestap(new Date(finishedToday));\n    const finishedTomorrowUnixData = parseToUnixTimestap(new Date(finishedTomorrow));\n\n    yield put({ type: TYPES.DATA, loading: true, inputData: str });\n\n    try {\n        const currentCity = yield call(searchRequest, str);\n\n        const { list } = currentCity;\n        const timeData = _.filter(list, item => finishedTodayUnixData >= item.dt);\n        timeData.length <= 2 && _.filter(list, item => finishedTomorrowUnixData >= item.dt);\n        console.log({ ...currentCity, list: [...timeData] });\n\n        yield put({ type: TYPES.DATA, currentCity: { ...currentCity, list: [...timeData] } });\n\n    } catch (e) {\n        yield put({ type: TYPES.SHOW_ERROR });\n    }\n\n    yield put({ type: TYPES.DATA, loading: false });\n}\n\nexport default function * () {\n    yield takeLatest(TYPES.SEARCH_CITY, search);\n}\n","// outsource dependencies\nimport { fork, all } from 'redux-saga/effects';\n\n// local dependencies\nimport sagasHome from '../pages/home/saga';\nimport sagasSearch from '../pages/search/saga';\n\n\nfunction * sagasRoot () {\n    yield all([\n        fork(sagasHome),\n        fork(sagasSearch)\n    ]);\n}\n\nexport default sagasRoot;\n","// outsource dependencies\nimport createSagaMiddleware from 'redux-saga';\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux';\n\n// local dependencies\nimport sagasRoot from '../sagas';\nimport homeReducer from '../pages/home/reducer';\nimport searchReducer from '../pages/search/reducer';\n\n\n// eslint-disable-next-line\nconst enchantedCompose = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\n\nconst reducers = combineReducers({\n    home: homeReducer,\n    search: searchReducer,\n});\n\nconst sagaMiddleware = createSagaMiddleware();\nexport const store = createStore(reducers, enchantedCompose(applyMiddleware(sagaMiddleware)));\nwindow.store = store;\nsagaMiddleware.run(sagasRoot);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the reducer load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register (config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web reducer is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW (swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different reducer. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister () {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import './index.css';\nimport App from './pages';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { store } from './reducer';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <HashRouter basename={process.env.PUBLIC_URL}>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want your reducer to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}